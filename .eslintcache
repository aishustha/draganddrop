[{"E:\\personal\\task\\src\\index.js":"1","E:\\personal\\task\\src\\reportWebVitals.js":"2","E:\\personal\\task\\src\\App.js":"3","E:\\personal\\task\\src\\components\\draganddrop\\draganddrop.js":"4","E:\\personal\\task\\src\\components\\draganddrop\\column.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":191,"mtime":1609661804526,"results":"9","hashOfConfig":"7"},{"size":2886,"mtime":1609729046321,"results":"10","hashOfConfig":"7"},{"size":3953,"mtime":1609730314176,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"198z8q5",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\personal\\task\\src\\index.js",[],["24","25"],"E:\\personal\\task\\src\\reportWebVitals.js",[],"E:\\personal\\task\\src\\App.js",[],"E:\\personal\\task\\src\\components\\draganddrop\\draganddrop.js",["26"],"import React, { Component } from 'react';\r\nimport dragandropStyle from './draganddrop.module.scss';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Column from './column';\r\n\r\nexport default class draganddrop extends Component {\r\n    state = {\r\n        tasks: [\r\n            {id: \"1\", taskName:\"Implement Dashboard Layout\", type:\"toDo\"},\r\n            {id: \"2\", taskName:\"Add button to card header\", type: \"toDo\"},\r\n            {id: \"3\", taskName:\"Allow users to remove tasks\", type: \"toDo\"},\r\n            {id: \"4\", taskName:\"Allow users to add tasks\", type:\"inProgress\"},\r\n            {id: \"5\", taskName: \"Implement Grid Card Layout\", type: \"Done\"},\r\n            {id: \"6\", taskName: \"Drag and Drop Tasks\", type: \"Done\"}\r\n        ],\r\n\r\n    }\r\n\r\n\r\n    onDragStart = (event, taskName) => {\r\n        console.log('dragstart on div:', taskName);\r\n        event.dataTransfer.setData(\"taskName\", taskName);\r\n    }\r\n\r\n    onDragOver = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    onDrop = (event, cat) => {\r\n        let taskName = event.dataTransfer.getData(\"taskName\");\r\n        let tasks = this.state.tasks.filter((task) => {\r\n            if (task.taskName == taskName) {\r\n                task.type = cat;\r\n            }\r\n            return task;\r\n        });\r\n        this.setState({\r\n            ...this.state, // spread operator (...)\r\n            tasks\r\n        });   \r\n    }\r\n    render() {\r\n        var tasks = {\r\n            toDo: [],\r\n            inProgress: [],\r\n            Done: []\r\n        }\r\n\r\n        this.state.tasks.forEach ((task) => {\r\n            tasks[task.type].push(\r\n                task\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className={dragandropStyle.dragContainer}>\r\n                <h2>Drag & Drop</h2>\r\n                <Grid container className={dragandropStyle.dragFlex} spacing={5}>\r\n\r\n                    <Column \r\n                    dragOver={this.onDragOver} \r\n                    drop={this.onDrop} \r\n                    title=\"To Do\" task={tasks.toDo} \r\n                    type=\"toDo\"\r\n                    dragStart={this.onDragStart}\r\n\r\n                    />\r\n                    <Column \r\n                        dragOver={this.onDragOver} \r\n                        drop={this.onDrop} \r\n                        title=\"In Progress\" \r\n                        task={tasks.inProgress} \r\n                        type=\"inProgress\"\r\n                        dragStart={this.onDragStart}\r\n                    />\r\n                    <Column \r\n                        dragOver={this.onDragOver} \r\n                        drop={this.onDrop} \r\n                        title=\"Done\" \r\n                        task={tasks.Done} \r\n                        type=\"Done\"\r\n                        dragStart={this.onDragStart}\r\n                    />\r\n                </Grid>\r\n         \r\n            </div>\r\n        );\r\n    }\r\n}","E:\\personal\\task\\src\\components\\draganddrop\\column.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":32,"column":31,"nodeType":"33","messageId":"34","endLine":32,"endColumn":33},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]