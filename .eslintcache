[{"E:\\personal\\task\\src\\index.js":"1","E:\\personal\\task\\src\\reportWebVitals.js":"2","E:\\personal\\task\\src\\App.js":"3","E:\\personal\\task\\src\\components\\draganddrop\\draganddrop.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":191,"mtime":1609661804526,"results":"8","hashOfConfig":"6"},{"size":3356,"mtime":1609670373311,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"198z8q5",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"E:\\personal\\task\\src\\index.js",[],["20","21"],"E:\\personal\\task\\src\\reportWebVitals.js",[],"E:\\personal\\task\\src\\App.js",[],"E:\\personal\\task\\src\\components\\draganddrop\\draganddrop.js",["22"],"import React, { Component } from 'react';\r\nimport dragandropStyle from './draganddrop.module.scss';\r\n\r\n\r\nexport default class draganddrop extends Component {\r\n    state = {\r\n        tasks: [\r\n            {id: \"1\", taskName:\"hike\", type:\"toDo\", backgroundColor:\"pink\"},\r\n            {id: \"2\", taskName:\"travel\", type: \"toDo\", backgroundColor: \"pink\"},\r\n            {id: \"3\", taskName:\"Read book\", type:\"inProgress\", backgroundColor:\"yellow\"},\r\n            {id: \"4\", taskName:\"Pay bills\", type: \"inProgress\", backgroundColor: \"yellow\"},\r\n            {id: \"5\", taskName: \"Go to the gym\", type: \"Done\", backgroundColor: \"blue\"},\r\n            {id: \"6\", taskName: \"Play baseball\", type: \"Done\", backgroundColor: \"blue\"}\r\n        ]\r\n    }\r\n\r\n\r\n    onDragStart = (event, taskName) => {\r\n        console.log('dragstart on div:', taskName);\r\n        event.dataTransfer.setData(\"taskName\", taskName);\r\n    }\r\n\r\n    onDragOver = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    onDrop = (event, cat) => {\r\n        let taskName = event.dataTransfer.getData(\"taskName\");\r\n\r\n        let tasks = this.state.tasks.filter((task) => {\r\n            if (task.taskName == taskName) {\r\n                task.type = cat;\r\n            }\r\n            return task;\r\n        });\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            tasks\r\n        });   \r\n    }\r\n    render() {\r\n        var tasks = {\r\n            toDo: [],\r\n            inProgress: [],\r\n            Done: []\r\n        }\r\n\r\n        this.state.tasks.forEach ((task) => {\r\n            tasks[task.type].push(\r\n                <div key={task.id}\r\n                    onDragStart = {(event) => this.onDragStart(event, task.taskName)}\r\n                    draggable\r\n                    className={dragandropStyle.draggable}\r\n                    style={{backgroundColor: task.backgroundColor}}>\r\n                    {task.taskName}    \r\n                </div>\r\n            );\r\n        });\r\n        return (\r\n            <div className={dragandropStyle.dragContainer}>\r\n                <h2 className={dragandropStyle.header}>To Do List Drag & Drop</h2>\r\n                <div className={dragandropStyle.toDo}\r\n                    onDragOver={(event)=>this.onDragOver(event)}\r\n                    onDrop={(event)=>{this.onDrop(event, \"toDo\")}}\r\n                >\r\n                    <span className={dragandropStyle.groupHeader}>\r\n                        To Do\r\n                    </span>\r\n                    {tasks.toDo}\r\n                </div>\r\n                <div className={dragandropStyle.inProgress}\r\n                    onDragOver={(event)=>this.onDragOver(event)}\r\n                    onDrop={(event)=>{this.onDrop(event, \"inProgress\")}}\r\n                >\r\n                    <span className={dragandropStyle.groupHeader}>\r\n                        In Progress\r\n                    </span>\r\n                    {tasks.inProgress}\r\n                </div>\r\n                <div className={dragandropStyle.droppable}\r\n                    onDragOver={(event)=>this.onDragOver(event)}\r\n                    onDrop={(event)=>this.onDrop(event, \"Done\")}>\r\n                    <span className={dragandropStyle.groupHeader}>\r\n                        Done\r\n                    </span>\r\n                    {tasks.Done}\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":31,"column":31,"nodeType":"29","messageId":"30","endLine":31,"endColumn":33},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]